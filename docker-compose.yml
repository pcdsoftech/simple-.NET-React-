services:
  # Backend Laravel Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: staff-hub-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=staff_hub
      - DB_USERNAME=staff_hub_user
      - DB_PASSWORD=staff_hub_password
    networks:
      - staff-hub-network
    depends_on:
      - db
    ports:
      - "8000:8000"

  # Frontend React Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: staff-hub-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    networks:
      - staff-hub-network
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: staff-hub-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: staff_hub
      MYSQL_USER: staff_hub_user
      MYSQL_PASSWORD: staff_hub_password
      MYSQL_ROOT_PASSWORD: root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - staff-hub-network
    ports:
      - "3306:3306"

  # PHPMyAdmin for database management (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: staff-hub-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: staff_hub_user
      PMA_PASSWORD: staff_hub_password
    networks:
      - staff-hub-network
    ports:
      - "8080:80"
    depends_on:
      - db

networks:
  staff-hub-network:
    driver: bridge

volumes:
  db-data:
    driver: local
