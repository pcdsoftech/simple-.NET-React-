version: '3.8'

services:
  # Backend Laravel Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: staff-hub-backend
    restart: unless-stopped
    volumes:
      - ./backend/storage:/var/www/html/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - staff-hub-network
    depends_on:
      - db

  # Frontend Nginx Service (for serving built React app)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: staff-hub-frontend
    restart: unless-stopped
    networks:
      - staff-hub-network
    depends_on:
      - backend

  # Nginx Web Server for both frontend and backend
  nginx:
    image: nginx:alpine
    container_name: staff-hub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./backend:/var/www/html
      - ./frontend/build:/var/www/frontend
    networks:
      - staff-hub-network
    depends_on:
      - backend
      - frontend

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: staff-hub-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - staff-hub-network
    # No exposed ports in production for security

networks:
  staff-hub-network:
    driver: bridge

volumes:
  db-data:
    driver: local
